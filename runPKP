#!/usr/bin/env python

from __future__ import division, absolute_import
from __future__ import print_function, unicode_literals
from builtins import dict

import logging
import argparse

import pkp
# import coloredlogs
# coloredlogs.install(level='DEBUG')


yml_file_default = 'input.yml'

if __name__ == '__main__':
    logger = logging.getLogger('')
    # logger.setLevel(logging.INFO)
    #ch = logging.StreamHandler()
    # formatter = logging.Formatter(
    #    '%(name)s:%(levelname)s:%(message)s')
    # ch.setFormatter(formatter)
    # logger.addHandler(ch)

    parser = argparse.ArgumentParser(
        description="PKP Runner"
    )
    parser.add_argument('yml_file', action="store",
                        help="YAML input file")
    parser.add_argument('-n', action="store", dest="np", type=int,
                        default=1,
                        help="Number of processor")
    parser.add_argument('-o', action="store", dest="results_dir",
                        type=str,
                        default="Results", help="Results directory")
    parser.add_argument('-d', action="store_true", dest="debug",
                        help="Print debug messages")

    argument = parser.parse_args()
    if argument.debug:
        log_level = logging.DEBUG
    else:
        log_level = logging.INFO

    # logging.basicConfig(
    #    level=log_level, stream=sys.stdout,
    #    format="%(levelname)s:%(name)s:%(funcName)s:%(message)s")
    logger.setLevel(log_level)
    yml_file = argument.yml_file
    logging.info('Create runner and read settings')
    runner = pkp.PKPRunner(yml_file)
    logging.info('Start run')
    results = runner.run(results_dir=argument.results_dir,
                         n_p=argument.np)

    # plot results
