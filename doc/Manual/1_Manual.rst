User Manual
===========

| PKP, the Pyrolysis Kinetic Preprocessor, is a tool to generate the
  parameter for modeling the pyrolysis process in CFD-applications. It
  allows a central data input for all three connected pyrolysis programs
  ``CPD``, ``CPD`` and ``PC Coal Lab``. The results of the selected
  pyrolysis programs will be used to generate the kinetic parameter for
  several kinetic models: constant Rate, Arrhenius rate, Kobayashi model
  and the Distributed Activation Energy Model (DAEM), see
  chapter [SS\_KinEq]. A second procedure generates parameter for the
  species and energy balance,
  chapters [SSS\_ConsEqCPD] and [SSS\_ConsEqFGDVC].
| PKP is written object orientated in Python 2.7.3.

First Steps
-----------

Before running the pyrolysis model with the program the first time, the
-Code [1]_ has to be compiled and the executable has to copied to the
main directory (containing also the Python code). There the executable
should be renamed *CPD.out*. [2]_ The directory must contain the
following files:

-  Coal.inp (User input for the information about the coal)

-  CPD.inp (User input for the settings of )

-  CPD.out (the executable)

-  FGDVC.inp (User input for the settings of )

-  IN.dat (input file for ``CPD``)

-  OperCond.inp (User input for the operating conditions)

-  Pyrolysis.py (the main code, accessing to the classes defined in the
   other \*.py)

The subdirectory *src* includes the following Python files,
*Pyrolysis.py* accesses to:

-  Compos\_and\_Energy.py

-  CPD\_Result.py

-  CPD\_SetAndLaunch.py

-  FGDVC\_Result.py

-  FGDVC\_SetAndLaunch.py

-  FitInfo.py

-  Fitter.py

-  InformationFiles.py

-  Models.py

Before running FG-DVC, the directories have to be defined, see the
paragraph \ **FGDVC.inp** in chapter [SS\_Generate\_Results]. There the
two information for  **main directory FG-DVC:** and **print increment,
writeValue:** must be defined. For CPD **print increment, writeValue:**
must be defined. All these information are kept, also when using the GUI
as input. So they just have to be defined once as long as they don’t
need to be changed.

Generate Results
----------------

The output of the pyrolysis programs has to be individually modified for
a further work with. Also the user of PKP should be aware of the
following points:

FG-DVC
^^^^^^

PKP was tested using version 8.2.3. Also the output of 8.2.2., which
seems to be concerning the shape identical to 8.2.3, was tested.

-  merge the olefins and paraffins into the rate of tar. But the yields
   of tar, outputted by just consider the species of tar except the
   olefins and paraffins. As the olefins and paraffins are in general
   not considered as single species in CFD combustion and gasification
   applications, the yield of tar generated by further also includes the
   Olefins and Paraffins. As the output of the olefins and paraffins
   themselves are correct, the kinetic parameter of this two species are
   additionally still fitted.

-  The output of does not directly report the yields and rates of
   hydrogen. To generate this information, the yields of hydrogen are
   calculated by subtract the light gases (:math:`CH_4`, CO,
   :math:`CO_2`, :math:`H_2O`, ...) from the total yields (last column
   in the ’gasyield.txt’). The rate is gained by derive a smoothed
   curve [3]_.

-  The amount of moisture and ash is both equal zero. This is
   recommended in the manual. Trying to set a fraction of moisture and
   ash leads to unrealistic results in the output (negative yields and
   rates).

-  The constant numerical time step for defined by the user shouldn’t be
   lower than :math:`10^{-3}`. The temperature history defined by the
   user is imported by as a text file [4]_. According to experience can
   not read imported text files defining the temperature history with a
   precision better than the :math:`10^{-3}`.

CPD
^^^

-  The outputted result files of does contain various information. For
   the further work the fraction of yields (beginning with ’f’, e.g.
   ’ftar’ in the first and fourth output file are further observed.)

-  As the output does not contain the rates, these rates over time are
   generated by deriving them using the CDS.

-  | If an oscillation in the output of the rates occur is the time step
     too low. There are not enough counting numbers in the output file.
     So the reported rates vary from zero (the in the CDS subtracted two
     yields have the same value) and a very high value (the last
     counting number changes, but the time step is very low).
   | The user has here the following possibilities to solve this
     problem:

   -  Use a lower time step.

   -  Set ’\ *print increment, writeValue:*\ ’ in *CPD.inp* to a high
      value. The calculation is still carried out with the ow time step.
      But not every calculated time is written into the result file.

   -  Modify the precision of the output by modify the code. If just the
      number of counting numbers is modified PKP will still be able to
      read this modified output.

| The user of PKP can apply a number of runs up to five of the pyrolysis
  programs. Every runs must have its individual temperature history. The
  different devolatilization results caused by the different operating
  conditions shall ensure a better applicability of the kinetics in CFD
  simulations, where the operating conditions can vary over a range.
  Taking responsibility to the computational costs, two or three runs is
  a good option to generate the kinetic parameter.
| The directly outputted results of the pyrolysis programs are copied
  into the main PKP directory. The number of the run is contained in the
  filename.
| The following subsections give mode detailed information and an
  overview on the specific user input and the generated PKP results.

Using the Graphical User Interface
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. figure:: Figures/GUI
   :alt: A screenshot of the Input GUI.

   A screenshot of the Input GUI.

When starting the graphical user interface, file *PKPgui.py*, the
central input windows opens, see figure [F\_GUI]. As also visible in
this figure, the general input structure is splitted into three parts:
*Pyrolysis Programs and Fitting*, *Coal Properties* and \ *Operating
Conditions*. The following selections can be done in the first of these:

-  **CPD**, **FG-DVC**, **PC Coal Lab**: These column boxes allow a
   selection, which of these detailed models shall be used and which
   kinetic parameter shall be fitted. The first two possible selections
   are here *None*, for not running this model, *Run* to just run it and
   make the species analysis. A fitting of kinetic parameter will not be
   carried out. Additional selections for fitting the results are
   *constant Rate* (eq. [E\_Reaction\_g]),
   *Arrhenius* (eq. [E\_Arrhenius\_g]),
   *Arrhenius no B* (eq. [E\_Arrhenius\_g\_noB]),
   *Kobayashi* (eq. [E\_Kobayashi]) and *DAEM* (eq. [E\_DAEM]). Here the
   fitting and the species analysis will be done.

-  **selected Fit Species (Arrhenius)** is only important if one of the
   selected models to fit is *Arrhenius* or *Arrhenius no B*. This
   column box allows which species shall be fitted. Possible options to
   choose are here:

   -  *Total*: only the overall yield is fitted

   -  *Main Species*: the yield curves of the overall yields, tar and
      gas (the sum of the light gases) are fitted

   -  *all Species*: the kinetic parameter for all species outputted by
      the detailed model are fitted

-  **Weight Parameter** Enter the parameter for the fitting procedure.
   The text line Weight Parameter Yields sets the factor
   :math:`\mathrm{a_0}` in equation [E\_Weight\_Param1], Rates sets
   :math:`\mathrm{a_1}` in equation [E\_Weight\_Param2].

The second section of the GUI, the information about the coal can be
entered. All properties refer to the coal in the as received state.

-  **Ultimate Analysis in  %** Sets the ultimate analysis of the coal.
   Values should be in percent.

-  **Proximate Analysis in %** Sets the proximate analysis of the coal.
   Values should be in percent.

-  **Molecule Weight Tar**: define the molecule weight of the tar.
   Required for the species analysis.

-  **Higher Veating Value** Enter here the higher heating value of the
   coal in :math:`\mathrm{\frac{MJ}{kg}}`.

-  **FG-DVC Coal #** FG-DVC needs an information whether the coal
   property file should be interpolated using the van-Krevelen Diagram
   (option *0-Interpolate*) or if a library coal should be used (1-8).
   If the selected coal is out of the range of the library coals, the
   closest library coal has to be selected. The generation of the coal
   file is also done automatically by PKP. [5]_

-  **FG-DVC tar cracking** Defines the FG-DVC modeling of the tar
   cracking. Possible selections are:

   -  *0.0* No tar cracking is modeled. [6]_

   -  When entering a time in seconds, e.g. ’0.01’, defines the holding
      time of the tar in the coal molecule. The tar is cracked during
      this time frame.

   -  A negative number, e.g. ’-1’, sets the full tar cracking.

The last section in the GUI allows the input of the operating
conditions:

-  **Pressure in atm** Defines the pressure where the devolatilization
   occurs.

-  **numerical time step** Sets the time step. For FG-DVC the constant
   value, for CPD the maximum.

-  | **Temperature History** With the spin box on the left, the numbers
     of temperature histories to apply is defined. If this is set to
     ’3’, three runs are carried out using the first three temperature
     histories. These temperature histories can be imported via the five
     text fields on the right. There the temperature histories can be
     entered manually or also be imported using the ’open’ buttons in
     below. Additionally they can be plotted (button ’plot’). Using this
     option also saves the temperature history in a
     file \ *TempHist1.dat*.Where the number stands for the current
     field. These saved temperature histories can be re-imported using
     the ’open’ button.
   | All the temperature histories have to be entered in two columns,
     just separated by spaces. The time is in seconds, the temperature
     in Kelvin.

The head menu contains under File following options:

+--------------------------+----------+
| Write into Table         | Ctrl+S   |
+--------------------------+----------+
| Write and Run            | Ctrl+R   |
+--------------------------+----------+
| Load saved state         | Ctrl+O   |
+--------------------------+----------+
| Show generated Results   | Ctrl+T   |
+--------------------------+----------+
| Exit                     | Ctrl+Q   |
+--------------------------+----------+

| Where the Write saved all information into the *.inp* files and the
  *TempHist#.dat* in the main directory. ’Load saved state’ transfer
  this information into the current GUI.
| The ’Write and Run’ is identical with the button ’Launch’ in the lower
  right of the GUI.
| The file menu ’Help’ offers to open this manual.
| Please do not forget to make the general settings in the input files,
  before using PKP the first time, see chapter [SS\_1stSteps].
| After running the result windows opens, figure [F\_GUIDone]. It lists
  all calculated species in the column bar. With ’Show results’ the
  yields over time for the detailed model output and the fitted equation
  are plotted. ’Open Species analysis’ opens the textiles with the
  species analysis results for each run. Open kinetic parameter opens
  the text file with the results of the fitting, one file for each
  detailed model. If this window was closed, it can be reopened by the
  option ’Show generated Results’ (Ctrl+T) in the Main window.
| All results are located in the Result directory. When starting a new
  run, its content is deleted.

.. figure:: Figures/GUI_Done
   :alt: A screenshot of the Result GUI.

   A screenshot of the Result GUI.

Using the input files
~~~~~~~~~~~~~~~~~~~~~

| The manual user input is managed by the four *\*.inp* files,
  *Coal.inp, CPD.inp* *FGDVC.inp* and *OperCond.inp*.
| The information you want to insert into these files have to be in the
  line below the line asking for the information. For example:
| *Fixed Carbon:
  43.7*
| This sets the amount of Fixed Carbon equal 43.7. The position (i.e.
  the line) of such two lines in the input file does not matter, the
  only important point is the specific string (in this example \ *Fixed
  Carbon:*) and that the value you want to set is in the following line
  after the string. [7]_
| Firstly you will get a short overview into these files and the values
  to enter into them:

Coal.inp
^^^^^^^^

contains the main information about the coal. PKP forwards the
information about the coal from this file to the programs and the coal
generator (*/COALS/coalsd.exe* in the directory). The proximate analysis
values are only required by ``CPD``.

-  **Fixed Carbon:** sets the amount of fixed carbon in the coal. The
   value has to be entered in percent for a non-daf coal.

-  **Volatile Matter:** sets the amount of volatile matter in the coal
   in percent, as received.

-  **UA Carbon:**, **UA Hydrogen:**, **UA Nitrogen:**, **UA Oxygen:**
   sets the ultimate analysis for the coal to model. The values have to
   be entered in percent.

-  **Higher Heating Value, as received, in J/kg:** sets the higher
   heating value for the coal. If this value is not known, set it equal
   zero. Then the Dulong formula (equation [E\_Dulong]) will be used to
   calculate the higher heating value.

-  **Tar Molecule weight, MTar:** Sets the molecule weight of the tar,
   as it is required for the species and energy calculation, see
   chapters [SSS\_ConsEqCPD] and [SSS\_ConsEqFGDVC].

-  **Weight-Parameter yields for fitting the kinetics:** sets the weight
   :math:`\mathrm{a_0}` of the equation [E\_Weight\_Param1] to weight
   the yields in the fitting procedure (equation [E\_LS]).

-  **Weight-Parameter rates for fitting the kinetics:** sets the weight
   :math:`\mathrm{a_1}` of the equation [E\_Weight\_Param2] to weight
   the rates in the fitting procedure (equation [E\_LS]).

CPD.inp
^^^^^^^

controls the program and the further work with its output.

-  **useCPD?:** if set to *yes* or *true*, will be launched.

-  **selected fitting Approximation:** if the *constantRate* is
   selected, the fitting will be carried out using
   equation [E\_constRate\_s] and [E\_constRate\_g]. When selecting
   *Arrhenius*, the kinetic parameter for the Arrhenius equation modeled
   pyrolysis kinetics (equation [E\_Arrhenius\_g]) will be calculated.
   To fit the Kobayashi parameter, set it to *Kobayashi*. If selecting
   *None*, no fitting of the kinetic parameter will be carried out, just
   the direct results and species and energy balance will be generated.

-  **initial time step in s:** The initial time step, starts to
   calculate with.

-  **print increment, writeValue:** Integer which sets the frequency of
   writing the result into the ``CPD``-output file. E.g. ’1’ means every
   value is written into the file, ’3’ only every third value.

FGDVC.inp
^^^^^^^^^

controls the program and the further work with its output.

-  **use FG-DVC?:** if set to *yes* or *true*, will be launched.

-  **selected fitting Approximation:** This selection is analogous to
   the in *CPD.inp*

-  **main directory FG-DVC:** sets the main path of ``FG-DVC``, where
   the *fgdvc.exe* is located. One example:
   ’C:\ ``\``\ Programs\ ``\``\ FGDVC\_8-2-3\ ``\``’

-  | **directory fgdvc-output:** Sets the main directory, where outputs
     the results. This is in general the directory, where the
     *fgdvcd.exe* is located. One example:
     ’C:\ ``\``\ Programs\ ``\``\ FGDVC\_8-2-3\ ``\``\ FGDVC\ ``\``’.
   | To use other already generated FG-DVC output files, it is a good
     option to set their path here. As long as they are still named
     *gasrate.txt* and *gasyield.txt*, the fitting will be carried out
     on the information contained in these files.

-  **Choose Coal:** If this is set equal *0*, the interpolation of the
   coal will be carried out using the information from *Coal.inp* and
   the FG-DVC program *coalsd.exe*, leading to specific coal files for
   the applied coal. If the file cannot be generated, i.e. the used coal
   is outside the interpolation triangle [8]_, select a value from
   *1* to *8* to use one of the library coals. The order here is the
   same as in ``FG-DVC``:

   #. Beulah-Zap

   #. Wyodak-Anderson

   #. Illinois # 6

   #. Bind Canyon, UT

   #. Lewis-Stockton, WV

   #. Pittsburgh # 8

   #. Upper Freeport, PA

   #. Pocahontas # 3, VA

-  **Model tar cracking?** To model no tar cracking (as recommended in
   the manual) set the tar residence time equal *0*. A partial tar
   cracking can be modeled by set the tar residence time is seconds. If
   a full tar cracking shall be used, set the residence time to a
   negative input value, e.g write *-1*.

OperCond.inp
^^^^^^^^^^^^

sets the operating condition for the pyrolysis programs.

-  **pressure in atm:** Sets the constant pressure in atmospheres.

-  **FG-DVC: constant (numerical) time step; CPD: maximum time step**:
   Enter here the numerical time step, the constant for and the maximum
   value for ``CPD``.

-  **Number of Temperature Histories to include:** Defines, how many
   runs of the pyrolysis models should be carried out. The different
   temperature history will be defined with the help of the next point:

-  | **Start Time History 1:** This line have to follow two columns,
     defining the temperature history for the first run of the pyrolysis
     models. The first column lists the time in seconds, the second one
     the temperature in K. The last time point is automatically selected
     as the final pyrolysis time. The end of the time-temperature array
     has to be labeled by the term *End Time History 1*. Here one
     example:
   | *Start Time History 1
     0, 293
     0.05, 1000
     0.1, 1700
     0.6, 1700
     End Time History 1
     * Analogue to this term the numbers 2 to 5 label the temperature
     history for the second to the fifth run.

The Result Files
~~~~~~~~~~~~~~~~

The generated results are documented in the following files. The name of
the text-files contains in front the used pyrolysis program (e.g.
*CPD-BalanceResults.txt*).

BalanceResults.txt
^^^^^^^^^^^^^^^^^^

This file contains the output of the species and the energy
conservation, chapters [SSS\_ConsEqCPD]  and [SSS\_ConsEqFGDVC]. The
first part lists the input of the UA, PA and HHV. Afterwards, the final
yields of all species are enumerated, as the result of using the
equation [E\_add\_up] to [E\_MethanNew]. The tar
composition (equation [E\_TarComp]), assuming a
:math:`\mathrm{C_nH_mO_p}` molecule with an average molecule mass,
inputted by the user, is given by the factors n, m, p. The last two
parts show the results applying the equations [E\_Dulong] to [E\_QPyro].

Results\_const\_rate.txt
^^^^^^^^^^^^^^^^^^^^^^^^

This file contains the kinetic parameters for the constant rate
(equation [E\_constRate\_s] or [E\_constRate\_g]) fitting. The two
parameters are k in :math:`\mathrm{\frac{1}{s}}` and
:math:`\mathrm{t_{start}}` in s.

Result\_ArrheniusRate.txt
^^^^^^^^^^^^^^^^^^^^^^^^^

*Result\_ArrheniusRate.txt* lists all kinetic parameter (A in
:math:`\mathrm{\frac{1}{s}}` and E in K) for the Arrhenius
equation [E\_Arrhenius\_s] or [E\_Arrhenius\_g].

Results\_KobayashiRate.txt
^^^^^^^^^^^^^^^^^^^^^^^^^^

This file list for all species the Kobayashi kinetic parameter
:math:`\mathrm{A_1 \; and \; A_2 \; in \; \frac{1}{s}}`,
:math:`\mathrm{E_1 \; and \; E_2 \; in \; K}`,
:math:`\mathrm{\alpha_1 \; and \; \alpha_2}`.

Fit\_result\_[Species]\_[R/Y].pdf
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

These files contains the plots of the pyrolysis program output curve and
the estimated curve using the applied model. These plots show the rate
(then \*\_R.pdf) or yields (\*\_Y.pdf). This plot exists for all species
calculated by the pyrolysis program (named in \*\_Species\_).

Fit\_result\_[Species].out
^^^^^^^^^^^^^^^^^^^^^^^^^^

For every species is in the referring file the *Time*, *Temperature*,
*Yields* and the *Rates* written in columns. This is not the original
output from the pyrolysis program, it is the result applying the
selected equation with the fitted parameter.

.. [1]
   available at:
   http://www.et.byu.edu/tom/cpd/cpdcpnlg/cpdcp\_nlgfiles.html

.. [2]
   Alternatively the name of the executable can be changed in the
   *Pyrolysis.py*. But rename the file is the less effort.

.. [3]
   The subtraction of the other species leads to small oscillation in
   the yields. These yield curves are further usable. But deriving this
   curve strengthen this oscillation to a giant value. So the yield
   curve has to be smoothed before deriving it by apply the equation
   :math:`y_i=\frac{1}{2} \alpha \cdot (y_{i-1}+y_{i+1})+(1-\alpha) \cdot y_i`
   fifty times over all points of the yields. This has still a low
   influence on the results (applying it very often would lead to a flat
   curve), but decreases the oscillation that much, that they are small
   at the derived curve (central differencing scheme).

.. [4]
   ’tTHistory.txt’ which was generated by PKP and written into the main
   directory.

.. [5]
   Using the FG-DVC *coalsd.exe*. For more information see the FG-DVC
   manual.

.. [6]
   The option recommended by the FG-DVC
   manual :raw-latex:`\cite{FGDVC_822}`.

.. [7]
   If you want to use another string in this file, you also have to
   change the individual file note in *InformationFiles.py*.

.. [8]
   see the FG-DVC manual for more details: THE FG-DVC COAL PYROLYSIS
   MODEL USER’S GUIDE Version 8.2.3 for Windows; Advanced Fuel Research,
   Inc., 87 Church Street, East Hartford, CT 06108-3728, USA; 2012
